( function() {

    /**
     * You specify enemies for each overworld map node, but this is what tells
     * you how generators will choose which enemies to spawn.
     * @type {Object}
     */
    window.game.GeneratorEnemySpread = {
        ALL: 'randomly pull from all available monster types'
    };

    /**
     * You specify generators for each overworld map node, but this is what
     * tells you how those generators will be placed.
     * @type {Object}
     */
    window.game.GeneratorPlacement = {
        RANDOM: 'randomly place generators',
    };

    /**
     * You specify a minigame for each overworld map node, but this is what
     * tells you how the enemies are calculated for each option in the minigame.
     * @type {Object}
     */
    window.game.MinigameEnemySpread = {
        RANDOM: 'randomly pull from generators',
    };    

    window.game.OverworldMapData = {
        
        /**
         * The graphic indices for each tile.
         * @type {Array:Number}
         */
        overworldMapTileIndices: [
            884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1340,1340,1340,1340,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1340,1340,1340,1340,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,1714,998,998,998,998,998,998,998,998,998,998,1340,1340,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1340,1340,1340,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1720,1720,1720,1720,1720,1720,1720,1720,1720,1720,1340,1340,1340,1340,1340,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1720,1720,1720,1720,1720,1720,1720,1340,1340,1340,1340,1340,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1720,1720,1720,1720,1720,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,884,1714,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,
            884,884,884,884,884,884,884,884,1714,1714,1714,1714,1714,998,998,998,998,998,998,998,998,998,998,998,998,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,1226,
            1714,1714,884,884,884,884,1714,1714,1714,1714,1714,1714,1714,1714,998,998,998,998,998,998,998,1454,1454,1454,1454,1340,1340,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,1226,1226,
            1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1454,1454,998,998,998,998,1454,1454,1454,1454,1454,1454,1340,1340,1340,1340,1340,1340,1340,1340,1226,1226,1226,1226,1226,1226,1226,1226,1226,
            1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1340,1340,1340,1340,1910,1226,1226,1226,1226,1226,1226,1226,1226,1226,
            1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1226,1226,1226,1226,1226,1226,1226,1226,
            1714,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1226,1226,1226,1226,1226,1226,1226,
            2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1226,1226,1910,1226,1226,1226,1226,
            2138,2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1226,
            2138,2138,2138,2138,2138,1714,1714,2138,2138,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            2138,2138,2138,2138,1714,1714,2138,2138,2138,2138,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            1714,2138,2138,1714,1714,2138,2138,2138,2138,2138,2138,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            1714,1714,1714,1714,1714,2138,2138,2138,2138,2138,2138,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1454,1714,1714,1714,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            1714,1714,2138,2138,1714,1714,2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1454,1454,1454,1454,1454,1454,1454,1714,1714,1714,1714,1714,1714,1714,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            1714,2138,2138,2138,2138,1714,1714,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,1910,
            2138,2138,2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1910,1910,1910,1910,1910,1910,1910,1796,1796,1796,
            2138,2138,2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1910,1910,1796,1796,1796,1796,1796,1796,1796,
            1714,2138,2138,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,2138,2138,1714,1714,1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,1714,1714,1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1714,1714,1714,1714,1714,1714,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1714,1714,1714,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1714,1714,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1568,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,1796,
            ],

        overworldExtra: [
            551,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,1361,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,1245,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,1361,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,1237,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,896,-1,1008,-1,-1,-1,-1,-1,-1,-1,-1,-1,1350,-1,-1,1352,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1360,1351,-1,-1,1245,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,551,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,1352,1360,1360,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,1245,-1,-1,-1,-1,
            -1,-1,551,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1350,-1,-1,-1,-1,-1,1352,-1,-1,-1,-1,-1,1351,-1,-1,-1,-1,1245,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,-1,-1,1352,1360,1360,1360,1351,-1,-1,-1,-1,-1,1245,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1237,-1,-1,-1,-1,
            -1,-1,-1,-1,551,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1350,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1245,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,893,-1,1009,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1245,-1,-1,-1,-1,-1,
            551,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1237,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,905,1017,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1350,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1245,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,896,-1,1008,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1359,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1245,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,551,-1,905,-1,1008,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1350,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1237,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,551,-1,-1,-1,-1,893,-1,-1,-1,1008,-1,-1,-1,-1,-1,-1,-1,-1,1474,1474,1474,1474,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1237,-1,-1,-1,-1,-1,-1,-1,
            902,894,-1,-1,-1,-1,893,902,-1,-1,-1,-1,-1,1008,1474,1474,-1,-1,-1,-1,1465,-1,-1,-1,-1,1466,-1,-1,-1,-1,-1,-1,-1,-1,1237,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,902,902,902,902,-1,-1,-1,-1,-1,-1,-1,1465,-1,-1,1466,-1,1474,1465,-1,-1,-1,-1,-1,-1,1466,1474,1474,-1,-1,-1,-1,1930,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1465,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1475,1930,1930,1921,-1,1922,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,2158,2158,-1,-1,-1,-1,-1,-1,-1,-1,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1929,-1,-1,-1,-1,-1,-1,1922,-1,-1,-1,-1,-1,-1,-1,
            2149,-1,-1,2150,-1,-1,-1,-1,-1,-1,-1,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1920,-1,-1,-1,-1,-1,-1,1931,-1,1930,-1,-1,-1,-1,
            -1,-1,-1,-1,2150,-1,-1,-1,-1,-1,-1,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1921,-1,-1,-1,-1,-1,-1,1922,1921,-1,1922,1930,1930,-1,
            -1,-1,-1,-1,-1,2159,-1,2158,2158,-1,-1,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1929,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1922,
            -1,-1,-1,-1,-1,2159,2149,-1,-1,2150,-1,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1921,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,2147,2149,-1,-1,-1,-1,2150,-1,1464,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1929,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            2148,-1,-1,2147,2157,-1,-1,-1,-1,-1,-1,2159,1473,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1929,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,2156,2156,2158,2157,-1,-1,-1,-1,-1,-1,2159,-1,1464,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1463,1472,1920,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,2149,-1,-1,2150,2148,-1,-1,-1,-1,2147,-1,-1,-1,1472,1464,-1,-1,-1,-1,-1,-1,-1,1463,1472,1472,-1,-1,-1,1920,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            2149,-1,-1,-1,-1,2150,2148,-1,-1,2147,-1,-1,-1,-1,-1,-1,1472,1472,1472,1472,1472,1472,1472,-1,-1,-1,-1,-1,-1,-1,1920,-1,-1,-1,-1,-1,-1,-1,-1,-1,1816,1816,1816,
            -1,-1,-1,-1,-1,-1,2159,2156,2156,-1,-1,-1,-1,-1,-1,-1,-1,1588,1588,1588,1588,1588,-1,-1,-1,-1,-1,-1,-1,-1,-1,1928,1920,-1,-1,-1,1816,1816,1816,1807,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,2159,-1,-1,-1,-1,-1,-1,-1,1588,1588,1579,-1,-1,-1,-1,-1,1580,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1920,1816,1807,-1,-1,-1,-1,-1,-1,-1,
            2148,-1,-1,-1,-1,2147,-1,-1,-1,-1,-1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,1589,-1,-1,-1,-1,-1,-1,-1,-1,-1,1807,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,2148,-1,-1,2147,-1,-1,-1,-1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1580,-1,-1,-1,-1,-1,-1,1816,1816,1807,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,2156,2156,-1,-1,-1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1580,-1,-1,-1,1816,1807,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1580,1816,1807,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1815,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1806,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            1588,1579,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1806,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1814,1806,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            ],

        overworldPaths: [
            -1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1184,1184,1184,1184,1117,-1,-1,1118,1184,1184,1117,-1,-1,-1,-1,-1,-1,-1,
            -1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,-1,1185,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,
            -1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1117,-1,-1,-1,1185,-1,-1,1185,-1,-1,1182,1184,1184,1184,1184,1184,1117,-1,
            -1,1185,-1,-1,-1,-1,-1,1118,1184,1184,1184,1184,1113,1184,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,1119,1184,1184,1120,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,
            -1,1185,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1185,-1,-1,1119,1184,1184,1184,1184,1184,1184,1184,1184,1184,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,
            -1,1185,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,
            -1,1185,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1119,1184,1184,1184,1184,1184,1184,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1184,1120,-1,-1,-1,-1,-1,1185,-1,
            -1,1182,1184,1184,1184,1113,1184,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,1118,1184,1120,-1,
            -1,1185,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,
            -1,1185,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1182,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1184,1120,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,
            -1,1119,1184,1184,1184,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1184,1184,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1120,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1117,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1120,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1184,1183,1184,1184,1184,1113,1184,1184,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1120,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,1182,1184,1184,1184,1184,1184,1113,1184,1184,1184,1184,1184,1120,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,1185,-1,-1,-1,-1,-1,1182,1184,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1117,-1,-1,-1,1185,-1,-1,-1,1185,-1,-1,-1,-1,-1,1185,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,1182,1184,1184,1184,1120,-1,-1,-1,-1,-1,1185,-1,-1,1119,1184,1184,1184,1184,1184,1117,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,1118,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1120,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1117,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1184,1184,1184,1184,1184,1114,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,1169,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,1119,1184,1184,1184,1117,-1,-1,-1,-1,-1,-1,1118,1184,1184,1120,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1118,1184,1114,-1,-1,-1,-1,1119,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1113,1184,1184,1114,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1185,-1,1119,1117,-1,-1,-1,-1,1185,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1185,-1,1185,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,1185,-1,-1,-1,-1,1185,-1,-1,1119,1184,1184,1184,1184,1183,1184,1117,-1,-1,-1,-1,-1,-1,-1,-1,-1,1118,1184,1120,-1,1185,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1184,1184,1114,-1,-1,-1,-1,-1,-1,-1,-1,-1,1182,1184,1184,1184,1184,1184,1184,1117,-1,-1,1185,-1,-1,-1,1185,-1,-1,1185,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1119,1184,1184,1184,1184,1184,1184,1184,1184,1184,1120,-1,-1,-1,-1,-1,-1,1119,1184,1184,1120,-1,-1,-1,1119,1184,1184,1120,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            ],

        overworldDoodadIndices: [
            -1,-1,271,272,272,272,273,-1,54,-1,-1,-1,109,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,216,-1,
            -1,371,328,329,329,329,330,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,554,-1,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,50,
            -1,-1,328,329,329,329,330,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            102,-1,385,386,386,386,387,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,162,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,-1,1267,-1,-1,-1,-1,-1,-1,
            -1,371,-1,-1,427,-1,-1,-1,101,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1268,-1,-1,-1,-1,371,-1,
            -1,-1,-1,-1,215,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,163,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1268,-1,-1,52,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,325,-1,-1,-1,-1,-1,-1,-1,-1,-1,1269,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,373,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1260,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,372,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,497,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,-1,-1,-1,-1,274,275,275,
            100,-1,-1,43,-1,373,-1,102,-1,-1,-1,-1,164,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,371,331,332,332,
            -1,-1,-1,372,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1264,1265,1265,1265,1265,1266,-1,-1,-1,-1,-1,-1,-1,388,389,389,
            -1,214,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,101,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,160,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,48,-1,445,446,447,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2191,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,502,503,504,-1,-1,
            -1,-1,-1,-1,-1,-1,53,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,216,-1,-1,-1,-1,373,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,371,-1,-1,-1,373,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,219,-1,-1,-1,-1,-1,-1,-1,-1,490,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,932,923,934,373,-1,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,31,28,-1,29,-1,-1,926,977,926,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,51,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,932,923,934,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,107,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,371,-1,-1,-1,30,37,-1,-1,429,-1,-1,-1,-1,-1,106,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,280,281,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,373,-1,337,338,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,489,-1,-1,-1,-1,337,338,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,219,-1,372,-1,-1,-1,-1,-1,106,-1,-1,337,338,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,394,395,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1735,1736,-1,-1,-1,-1,-1,-1,-1,219,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1792,1793,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,-1,-1,1153,-1,-1,-1,-1,-1,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1849,-1,-1,-1,-1,-1,1166,-1,-1,371,-1,210,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,371,220,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1155,-1,-1,-1,1156,1164,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,372,220,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,1154,1090,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,220,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1154,1091,
            -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,373,-1,-1,-1,372,-1,-1,-1,1158,1164,
            -1,-1,-1,-1,220,220,-1,-1,-1,-1,-1,-1,-1,-1,220,-1,-1,-1,-1,-1,-1,-1,-1,371,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
            -1,-1,556,557,557,557,557,558,-1,-1,-1,-1,-1,373,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,430,-1,-1,-1,-1,372,-1,-1,
            -1,220,613,614,614,614,614,615,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,220,-1,-1,-1,-1,-1,220,-1,-1,-1,-1,1156,1151,1151,1151,1157,-1,-1,-1,-1,-1,-1,-1,
            ],

        overworldWalkability: [
            0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,0,0,
            0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,
            0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,0,0,1,0,0,1,1,1,1,1,1,1,0,
            0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,1,0,0,0,0,0,1,0,
            0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
            0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
            0,1,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,0,
            0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,
            0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,
            0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,
            0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
            0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,
            0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            ],
        /**
         * The width of overworldMapTileIndices
         * @type {Number}
         */
        overworldMapWidth: 43,

        // Since we hard-coded the overworld map, I'm putting this here to
        // indicate which tile is walkable. When we make it so that there are
        // multiple walkable tiles, we'll have to fix this value.
        overworldWalkableTile: 715,

        /**
         * Each node in this array is an Object with the following:
         *     x - Number - x coordinate in tiles
         *     y - Number - y coordinate in tiles
         *     description - String - this will show verbatim over the node
         *     difficulty - Number - difficulty of the map that will be generated
         *     dimensions - Array:Number - an array of size 2 representing size
         *         of the map in PUZZLE PIECES, not tiles.
         *     clearFog - Array:Array - an array of patches of fog to clear. Each array is [tileX, tileY, radius].
         *         There's an optional fourth element, a boolean, representing the 'drawCircular' arg to setFog.
         *         It defaults to false, meaning a square will be drawn.
         *     npcs - Array:Object - an array of objects with the following:
         *         absoluteChance - a chance from 0-1 that NPCs will spawn on this map.
         *             It is called 'absolute' because it's not based on anything else.
         *     enemies - Array:Object - an array of objects with the following:
         *         id - Number - the ID of the enemy (see UnitData.js)
         *         levelRange - Array[2] - an array of [minLevel, maxLevel].
         *             OR
         *             You could specify minLevel (Number) and maxLevel (Number)
         *             if you want
         *         relativeWeight - Number - optional (defaults to 1000). The 
         *             relative weight that this enemy will spawn.
         *     generators - Object - an object with the following;
         *         chancePerWalkableTile - Number - this is a way to specify the
         *             number of generators that will show on a map. This is the
         *             "chance" that a walkable tile will be a generator, so if
         *             you have 100 walkable tiles and you specify .05 for this
         *             number, you'll end up with 5 generators.
         *         spread - game.GeneratorEnemySpread - this tells the generator
         *             how to pick enemies
         *         placement - game.GeneratorPlacement - this tells the map how
         *             to lay out generators
         *         minDistanceFromSpawn - Number - optional (defaults to 7). The
         *             minimum distance that generators can appear to spawn points.
         *     boss - Object - an object with the following:
         *         id - Number - the ID of the boss (see UnitData.js)
         *         level - Number - the level of the boss
         *     tilesetID - Number - an ID defined in TilesetManager that corresponds
         *             to a tileset.
         *     minigame - Object - an object with the following:
         *         baseDiamonds - Number - the number of diamonds to give for the first 
         *             minigame option
         *         diamondsPerLevel - Number - the number of bonus diamonds per 
         *             difficulty level
         *         minEnemies - Array:Number - minimum number of total enemies 
         *             for each difficulty (the first is the easiest difficulty).
         *             This is optional, but the default is something I put in 
         *             just so that there are no errors; the numbers may not make sense.
         *
         *              Also note that each minigame tier will have more 
         *              total enemies than the tier below it, so if you specify
         *              a maximum 2 for the first tier, then your maximum for
         *              the fifth tier will be no less than 6 (because there are
         *              four tiers in between 1 and 5, so 2+4==6).
         *         maxEnemies - Array:Number - see above.
         *         spread - game.MinigameEnemySpread - this tells the minigame 
         *             how to pick enemies
         *     startingCoins - Number - the number of coins you start with
         *
         * Error-checking and the insertion of default values are done in 
         * setupOverworldMapNodes.
         * @type {Array:Object}
         */
        overworldMapNodes: [

        // Forest nodes
        { 
        // This node is the first map in the whole game. It's harder to lose
        // than it is to win.
            x: 1, y: 1,
            description: 'Forest node 1',

            // You have way more coins than you'll ever use.
            startingCoins: game.UNIT_PLACEMENT_COST * 20,
            difficulty: 1,
            dimensions: [5,2],
            clearFog: [[1,5,3, true], [0,2,3]],

            enemies: [
                {
                    id: game.UnitType.TURNIP.id,
                    levelRange: [1,1],
                },
            ],

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TURNIP_BOSS.id,
                level: 2
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 2,
                minEnemies: [1,2,3,4,5],
                maxEnemies: [1,2,3,6,8],
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.FOREST_TILESET_ID
        },
        {
            x: 1, y: 5,
            description: 'Forest node 2',
            startingCoins: game.UNIT_PLACEMENT_COST * 20,
            difficulty: 2,
            dimensions: [7,3],
            clearFog: [[1,7,3,true]],

            enemies: [
                {
                    id: game.UnitType.TURNIP.id,
                    levelRange: [1,2],
                },
            ],

            generators: {
                maxEnemiesToSpawn: 2,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREANT_BOSS.id,
                level: 2
            },

            minigame: {
                baseDiamonds: 14,
                diamondsPerLevel: 2,
                minEnemies: [2,3,4,5,6],
                maxEnemies: [2,3,4,6,7],
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.FOREST_TILESET_ID
        },
        {
            x: 1, y: 9,
            description: 'Forest node 3',
            difficulty: 2,
            dimensions: [7,3],
            clearFog: [[1,11,2]],

            enemies: [
                {
                    id: game.UnitType.TURNIP.id,
                    levelRange: [3,4],
                },
                {
                    id: game.UnitType.SPIDER.id,
                    levelRange: [3,5],
                    relativeWeight: 2000,
                }
            ],

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.RED_SPIDER_BOSS.id,
                level: 5
            },

            minigame: {
                baseDiamonds: 16,
                diamondsPerLevel: 2,
                minEnemies: [2,3,4,5,6],
                maxEnemies: [3,3,4,6,7],
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.FOREST_TILESET_ID
        },
        {
        // This node is only two away from the desert.
            x: 3, y: 8,
            description: 'Forest node 4',
            difficulty: 2,
            dimensions: [10,3],
            clearFog: [[4,5,5]],

            enemies: [
                {
                    id: game.UnitType.BLACK_BAT.id,
                    levelRange: [6,10],
                },
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [7,10],
                }
            ],

            npcs: {
                absoluteChance: .5,
            },

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.GNOME_WIZARD_ALT_BOSS.id,
                level: 7
            },

            minigame: {
                baseDiamonds: 22,
                diamondsPerLevel: 3,
                minEnemies: [2,3,4,5,6],
                maxEnemies: [4,5,6,7,8],
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.FOREST_TILESET_ID
        },
        {
            x: 3, y: 11,
            description: 'Forest node 5',
            difficulty: 2,
            dimensions: [10,3],
            clearFog: [[5,10,4]],

            enemies: [
                {
                    id: game.UnitType.ORC.id,
                    levelRange: [4,6],
                },
                {
                    id: game.UnitType.SPIDER.id,
                    levelRange: [3,5],
                }
            ],
            
            npcs: {
                absoluteChance: .25,
            },

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.BROWN_WOLF_BOSS.id,
                level: 6
            },

            minigame: {
                baseDiamonds: 20,
                diamondsPerLevel: 3,
                minEnemies: [2,3,4,5,6],
                maxEnemies: [4,5,4,6,10],
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 5, y: 10,
            description: 'Forest node 6',
            difficulty: 2,
            dimensions: [11,3],
            clearFog: [[4,5,5],[3,11,3]],

            enemies: [
                {
                    id: game.UnitType.ORC.id,
                    levelRange: [4,7],
                },
                {
                    id: game.UnitType.BLACK_BAT.id,
                    levelRange: [6,10],
                },
            ],

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TROLL_BOSS.id,
                level: 7
            },

            minigame: {
                baseDiamonds: 22,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 8, y: 4,
            description: 'Forest node 7',
            difficulty: 2,
            dimensions: [12,3],
            clearFog: [[12,4,5,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [7,11],
                },
                {
                    id: game.UnitType.ORC.id,
                    levelRange: [4,8],
                },
                {
                    id: game.UnitType.BLACK_BAT.id,
                    levelRange: [6,11],
                },
            ],

            generators: {
                maxEnemiesToSpawn: 3,
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            npcs: {
                absoluteChance: .75,
            },

            boss: {
                id: game.UnitType.BANDIT_3_BOSS.id,
                level: 9
            },

            minigame: {
                baseDiamonds: 25,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Desert nodes
        {
            x: 12, y: 4,
            description: 'Desert node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[18,5,4,true],[12,4,7,true],[20,10,2,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 18, y: 5,
            description: 'Desert node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[24,1,5,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 20, y: 10,
            description: 'Desert node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[16,12,4,true],[17,17,2],[26,10,5,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Lava nodes
        {
            x: 24, y: 1,
            description: 'Lava node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[29,1,6,true],[23,4,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 31, y: 4,
            description: 'Lava node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[31,4,5],[23,1,4,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 36, y: 3,
            description: 'Lava node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[41,4,6,true],[31,4,5]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 26, y: 10,
            description: 'Lava node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[30,9,4,true],[23,10,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 32, y: 9,
            description: 'Lava node 5',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[31,4,5],[29,10,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Mud nodes
        {
            x: 17, y: 17,
            description: 'Mud node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[21,17,2],[15,21,2],[14,17,2,true],[17,12,5,true],[17,17,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 21, y: 17,
            description: 'Mud node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[21,17,4,true],[25,18,2],[21,23,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 25, y: 18,
            description: 'Mud node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[21,17,2],[25,18,2],[25,22,2],[28,18,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 15, y: 21,
            description: 'Mud node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[14,17,3,true],[15,21,2,true],[18,22,3,true],[21,23,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 21, y: 23,
            description: 'Mud node 5',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[21,20,3,true],[21,23,2,true],[25,22,2],[15,21,3,true],[18,23,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 25, y: 22,
            description: 'Mud node 6',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[25,22,2,true],[21,23,2,true],[25,18,2,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Autumn nodes
        {
            x: 41, y: 5,
            description: 'Autumn node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,10,2,true],[36,3,4,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 39, y: 10,
            description: 'Autumn node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,13,2,true],[41,5,3]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 39, y: 13,
            description: 'Autumn node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[40,16,3,true],[39,10,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 40, y: 16,
            description: 'Autumn node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[36,15,5,true],[31,18,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Jungle nodes
        {
            x: 31, y: 18,
            description: 'Jungle node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[28,18,3,true],[31,18,2],[34,20,2],[37,17,4,true],[32,24,5,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 34, y: 20,
            description: 'Jungle node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,22,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 32, y: 24,
            description: 'Jungle node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,25,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 39, y: 22,
            description: 'Jungle node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,25,2],[40,29,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 39, y: 25,
            description: 'Jungle node 5',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[39,22,2],[40,29,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Salt nodes
        {
            x: 40, y: 29,
            description: 'Salt node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[37,31,1,true],[40,31,2,true],[40,35,2],[40,32,2,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 40, y: 35,
            description: 'Salt node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[37,35,2]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 37, y: 33,
            description: 'Salt node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[37,33,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 37, y: 31,
            description: 'Salt node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[35,33,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 33, y: 33,
            description: 'Salt node 5',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[37,33,6,true],[28,34,5,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Snow nodes
        {
            x: 23, y: 34,
            description: 'Snow node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[21,31,2,true],[17,33,2,true],[13,35,2,true],[20,36,3],[16,36,3]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 21, y: 31,
            description: 'Snow node 2',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[18,30,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 18, y: 30,
            description: 'Snow node 3',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[15,31,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 17, y: 33,
            description: 'Snow node 4',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[15,31,3,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 15, y: 31,
            description: 'Snow node 5',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[17,36,6]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        {
            x: 13, y: 35,
            description: 'Snow node 6',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[3,36,8,true],[4,30,2,true],[8,30,2,true],[13,34,4,true]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },

        // Ice nodes
        {
            x: 3, y: 28,
            description: 'Ice node 1',
            difficulty: 6,
            dimensions: [10,5],
            clearFog: [[1,1,1]],

            enemies: [
                {
                    id: game.UnitType.WOLF.id,
                    levelRange: [20,25],
                },
                {
                    id: game.UnitType.DRAGON.id,
                    levelRange: [20,25],
                }
            ],

            generators: {
                chancePerWalkableTile: .02,
                spread: game.GeneratorEnemySpread.ALL,
                placement: game.GeneratorPlacement.RANDOM,
                minDistanceFromSpawn: 7
            },

            boss: {
                id: game.UnitType.TREE.id,
                level: 40
            },

            minigame: {
                baseDiamonds: 12,
                diamondsPerLevel: 4,
                spread: game.MinigameEnemySpread.RANDOM
            },

            tilesetID: game.TilesetManager.MARSH_TILESET_ID
        },
        ],

        /**
         * Searches this.overworldMapNodes for a node whose x and y match the
         * specified coordinates.
         * @param  {Number} tileX - x, in tile coordinates
         * @param  {Number} tileY - y, in tile coordinates
         * @return {Object}       - an overworld map node. See
         * overworldMapNodes.
         */
        getOverworldNode: function(tileX, tileY) {
            for (var i = 0; i < this.overworldMapNodes.length; i++) {
                var node = this.overworldMapNodes[i];
                if ( node.x == tileX && node.y == tileY ) {
                    return node;
                }
            };
            return null;
        },

        /**
         * Calls getOverworldNode on the last tile you clicked on the overworld.
         * If you just clicked it, then it's technically the current map and not
         * the "last" map.
         * @return {Object} - an overworld map node. See overworldMapNodes.
         */
        getOverworldNodeOfLastMap: function() {
            // If this was null before calling this, it will be randomly set
            // now. The only way that would happen is if we got to this code via
            // a debug path, e.g. debugTransitionFromOverworldToNormalMap.
            var tileOfLastMap = game.overworldMap.getTileOfLastMap();

            // Get the node in the overworld map that the spawner we clicked
            // corresponds to.
            var nodeOfMap = this.getOverworldNode(tileOfLastMap.x, tileOfLastMap.y);
            if ( nodeOfMap == null ) {
                game.util.debugDisplayText('You moved to a normal map, but the tile doesn\' correspond to an overworldMapNode: ' + 
                    nodeOfMap.x + ', ' + nodeOfMap.y, 'no overworldMapNode');
            }

            return nodeOfMap;
        },

        /**
         * Clears fog on the overworld map according to the map we just beat.
         *
         * This only does something if clearFog was set for that node.
         *
         * See overworldMapNodes.
         */
        clearFog: function() {
            var nodeOfMap = this.getOverworldNodeOfLastMap();
            var fogToClear = nodeOfMap.clearFog;
            if ( fogToClear === undefined ) return;

            for (var i = 0; i < fogToClear.length; i++) {
                var fogData = fogToClear[i];
                var drawCircular = fogData[3] !== undefined ? fogData[3] : false;
                game.overworldMap.setFog(fogData[0], fogData[1], fogData[2], false, drawCircular);
            };
        },

        /**
         * Initializes the overworld map. This should only be called once.
         */
        initializeOverworldMap: function() {
            // This is an empty array because there are no doodads yet.
            var tilesetID = game.TilesetManager.MARSH_TILESET_ID;
            var tiles = [];
            for (var i = 0; i < this.overworldMapTileIndices.length; i++) {
                var x = i % this.overworldMapWidth;
                var y = Math.floor(i/this.overworldMapWidth);
                var graphic = this.overworldMapTileIndices[i];
                var walkable = this.overworldWalkability[i] ? true : false;
                tiles.push(new game.Tile(tilesetID, graphic, i, x, y, walkable));

                if ( this.overworldDoodadIndices[i] == -1 ) this.overworldDoodadIndices[i] = undefined;
                if ( this.overworldPaths[i] == -1 ) this.overworldPaths[i] = undefined;
                if ( this.overworldExtra[i] == -1 ) this.overworldExtra[i] = undefined;
            };

            game.overworldMap = new game.Map(tiles, this.overworldDoodadIndices, tilesetID, this.overworldMapWidth, null, true, this.overworldPaths, this.overworldExtra);

            // Put each node into the map
            for (var i = 0; i < this.overworldMapNodes.length; i++) {
                var node = this.overworldMapNodes[i];
                var index = node.y * this.overworldMapWidth + node.x;

                // Convert all the tiles that are supposed to be spawners into
                // spawners.
                game.overworldMap.mapTiles[index].convertToSpawner();
            };

            // Clear fog around the "first" node.
            game.overworldMap.setFog(1, 0, 3, false, true);
        }
    };
}());

/**
 * This function fills in any missing data from overworldMapNodes. It is called
 * immediately after it is defined (it's an IIFE).
 *
 * Any errors that print are considered to be programmer errors.
 */
( function setupOverworldMapNodes() {
    var nodes = game.OverworldMapData.overworldMapNodes;

    for (var i = 0; i < nodes.length; i++) {
        var node = nodes[i];
        var nodeDescription = (node.description === undefined) ? ('Node #' + i) : ('"' + node.description + '"');
        var error = false;
        var dimensions = node.dimensions;
        var enemies = node.enemies;
        var npcs = node.npcs;
        var boss = node.boss;
        var generators = node.generators;
        var tilesetID = node.tilesetID;
        var minigame = node.minigame;

        if ( dimensions === undefined || dimensions.length != 2 ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' has invalid (or undefined) dimensions!', 'invalid dimension' + i);
        }

        if ( enemies === undefined ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' does not have any enemies defined!', 'no enemies' + i);
        }

        if ( boss === undefined ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' does not have a boss defined!', 'no boss' + i);
        }

        if ( generators === undefined ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' does not have generators defined!', 'no generators' + i);
        }

        if ( tilesetID === undefined ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' does not have a tilesetID defined!', 'no tilesetID' + i);
        }

        if ( minigame === undefined ) {
            error = true;
            game.util.debugDisplayText(nodeDescription + ' does not have a minigame defined!', 'no minigame' + i);
        }

        if ( error ) {
            continue;
        }

        game.util.useDefaultIfUndefined(node, 'startingCoins', game.UNIT_PLACEMENT_COST * 15);

        // If you didn't specify NPCs then that's fine, you just won't get any
        // in your map.
        if ( npcs === undefined ) {
            node.npcs = {
                absoluteChance: 0
            };
        }

        // Keep track of which enemies we've seen so that we warn when you have
        // duplicates.
        var seenEnemies = {};
        for (var j = 0; j < enemies.length; j++) {
            var enemy = enemies[j];
            if ( enemy.id === undefined ) {
                game.util.debugDisplayText(nodeDescription + ' has an enemy with no id!', 'no id' + i + j);
                continue;
            }

            // This is a problem because of how the minigame pulls enemy data
            // from the map. Search for "[minigame_no_dupes]" for an
            // explanation.
            if ( enemy.id in seenEnemies ) {
                game.util.debugDisplayText(nodeDescription + ' has two enemies with the same ID!', 'duplicate id' + i + j);
            }

            seenEnemies[enemy.id] = true;

            if ( enemy.levelRange !== undefined ) {
                if ( enemy.minLevel !== undefined || enemy.maxLevel !== undefined ) {
                    game.util.debugDisplayText(nodeDescription + ' specifies both a level range AND a min or max level!', 'range AND min or max' + i + j);
                    continue;
                }

                if ( enemy.levelRange.length != 2 ) {
                    game.util.debugDisplayText(nodeDescription + ' specifies a level range whose length is not 2!', 'level range wrong length' + i + j);
                    continue;   
                }

                enemy.minLevel = enemy.levelRange[0];
                enemy.maxLevel = enemy.levelRange[1];
            }

            if ( enemy.minLevel === undefined ) {
                game.util.debugDisplayText(nodeDescription + ' has an enemy with no minLevel!', 'no minLevel' + i + j);
                continue;
            }

            if ( enemy.maxLevel === undefined ) {
                game.util.debugDisplayText(nodeDescription + ' has an enemy with no maxLevel!', 'no maxLevel' + i + j);
                continue;
            }

            // Make sure maxLevel is always the bigger of the two values
            if ( enemy.maxLevel < enemy.minLevel ) {
                var temp = enemy.maxLevel;
                enemy.maxLevel = enemy.minLevel;
                enemy.minLevel = temp;
            }

            if ( enemy.relativeWeight === undefined ) {
                // Make the default 1000 so that you've got wiggle-room for
                // specifying rare enemies. For example, you could specify 10
                // enemies and give a single one an explicit relativeWeight of
                // 10, which would make it show up much less often.
                enemy.relativeWeight = 1000;
            }
        };

        if ( generators.chancePerWalkableTile === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' defines generators with no chancePerWalkableTile!', 'no chancePerWalkableTile' + i + j);
            continue;
        }
        if ( generators.spread === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' defines generators with no spread!', 'no spread' + i + j);
            continue;
        }
        if ( generators.placement === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' defines generators with no placement!', 'no placement' + i + j);
            continue;
        }

        if ( generators.minDistanceFromSpawn === undefined ) {
            generators.minDistanceFromSpawn = 7;
        }

        if ( generators.maxEnemiesToSpawn === undefined ) {
            generators.maxEnemiesToSpawn = 10;
        }

        var defaultMovementAIID = game.MovementAI.FOLLOW_PATH;
        var defaultMovementAIRelativeWeight = 50;
        if ( generators.movementAIs === undefined ) {
            generators.movementAIs = [];
            generators.movementAIs.push( {id: defaultMovementAIID, relativeWeight: defaultMovementAIRelativeWeight} );
        }

        for (var j = 0; j < generators.movementAIs.length; j++) {
            var movementAI = generators.movementAIs[j];
            if ( movementAI.id === undefined ) {
                game.util.debugDisplayText(nodeDescription + ' defines a movement AI with no ID!', 'no movement AI ID' + i + j);
            }
            game.util.useDefaultIfUndefined(movementAI, 'relativeWeight', defaultMovementAIRelativeWeight);
        };

        if ( boss.id === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' has no boss ID!', 'no boss ID' + i);
            continue;
        }

        if ( boss.level === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' has no boss level!', 'no boss level' + i);
            continue;
        }

        if ( minigame.spread === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' has no minigame spread!', 'no minigame spread' + i);
            continue;
        }

        if ( minigame.baseDiamonds === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' has no minigame baseDiamonds!', 'no minigame baseDiamonds' + i);
            continue;
        }

        if ( minigame.diamondsPerLevel === undefined ) {
            game.util.debugDisplayText(nodeDescription + ' has no minigame diamondsPerLevel!', 'no minigame diamondsPerLevel' + i);
            continue;
        }

        if ( node.minigame.minEnemies === undefined ) {
            node.minigame.minEnemies = [];
            for (var j = 0; j < game.NUM_MINIGAME_DIFFICULTIES; j++) {
                node.minigame.minEnemies.push((j+1) * 5);
            };
        }

        if ( node.minigame.maxEnemies === undefined ) {
            node.minigame.maxEnemies = [];
            for (var j = 0; j < game.NUM_MINIGAME_DIFFICULTIES; j++) {
                node.minigame.maxEnemies.push((j+1) * 7);
            };
        }

    };

}());
